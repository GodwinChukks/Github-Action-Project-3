name: NodeJS CI with Matrix, Linting, and Static Analysis

on: push

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16, 18, 20]
        environment: [development, staging]
        include:
          - node-version: 20
            environment: production

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}-v2
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run ESLint (Static Code Analysis)
        run: npm run lint

      - name: Run tests with output capture
        run: |
          mkdir -p test-output
          npm test | tee test-output/results-${{ matrix.node-version }}-${{ matrix.environment }}.txt

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-result-${{ matrix.node-version }}-${{ matrix.environment }}
          path: test-output/results-${{ matrix.node-version }}-${{ matrix.environment }}.txt

  deploy-aws:
    needs: build-and-analyze
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Verify AWS CLI is available
        run: aws --version

      - name: Make deployment script executable
        run: chmod +x deploy-aws.sh

      - name: Debug environment values and script path
        run: |
          echo "✅ AWS Region: $AWS_REGION"
          echo "✅ S3 Bucket: $AWS_DEPLOY_BUCKET"
          echo "✅ Script file location:"
          ls -la ./deploy-aws.sh
          echo "✅ Public folder contents:"
          ls -la ./public
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DEPLOY_BUCKET: ${{ secrets.AWS_DEPLOY_BUCKET }}

      - name: Run AWS deploy script
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DEPLOY_BUCKET: ${{ secrets.AWS_DEPLOY_BUCKET }}
        run: ./deploy-aws.sh
